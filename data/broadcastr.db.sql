BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "Album" (
	"AlbumID"	INTEGER NOT NULL UNIQUE,
	"AlbumName"	TEXT NOT NULL,
	"ArtistID"	INTEGER,
	"MBID"	TEXT,
	PRIMARY KEY("AlbumID" AUTOINCREMENT),
	FOREIGN KEY("ArtistID") REFERENCES "Artist"("ArtistID")
);
CREATE TABLE IF NOT EXISTS "Artist" (
	"ArtistID"	INTEGER NOT NULL UNIQUE,
	"ArtistName"	TEXT NOT NULL UNIQUE,
	"LastFmMbid"	TEXT,
	PRIMARY KEY("ArtistID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Broadcast" (
	"BroadcastID"	INTEGER NOT NULL UNIQUE,
	"BroadcastrID"	INTEGER NOT NULL,
	"ForeignID"	INTEGER,
	"ForeignType"	INTEGER,
	"Title"	TEXT,
	"Body"	TEXT,
	"Timestamp"	TEXT,
	PRIMARY KEY("BroadcastID" AUTOINCREMENT),
	FOREIGN KEY("BroadcastrID") REFERENCES "User"("UserID")
);
CREATE TABLE IF NOT EXISTS "DirectMessage" (
	"DirectMessageID"	INTEGER NOT NULL UNIQUE,
	"SenderID"	INTEGER NOT NULL,
	"RecipientID"	INTEGER NOT NULL,
	"MessageBody"	TEXT NOT NULL,
	"TimeSent"	TEXT NOT NULL,
	"Read"	INTEGER NOT NULL DEFAULT 0,
	PRIMARY KEY("DirectMessageID" AUTOINCREMENT),
	FOREIGN KEY("RecipientID") REFERENCES "User"("UserID"),
	FOREIGN KEY("SenderID") REFERENCES "User"("UserID")
);
CREATE TABLE IF NOT EXISTS "Following" (
	"FollowingID"	INTEGER NOT NULL UNIQUE,
	"FollowerID"	INTEGER NOT NULL,
	"FolloweeID"	INTEGER NOT NULL,
	"FollowingSince"	TEXT NOT NULL,
	PRIMARY KEY("FollowingID" AUTOINCREMENT),
	FOREIGN KEY("FolloweeID") REFERENCES "User"("UserID"),
	FOREIGN KEY("FollowerID") REFERENCES "User"("UserID")
);
CREATE TABLE IF NOT EXISTS "Like" (
	"LikeID"	INTEGER NOT NULL UNIQUE,
	"LikerID"	INTEGER,
	"ForeignID"	INTEGER,
	"ForeignType"	TEXT,
	"Timestamp"	TEXT,
	PRIMARY KEY("LikeID" AUTOINCREMENT),
	FOREIGN KEY("LikerID") REFERENCES "User"("UserID")
);
CREATE TABLE IF NOT EXISTS "Period" (
	"PeriodID"	INTEGER NOT NULL UNIQUE,
	"PeriodName"	TEXT NOT NULL UNIQUE,
	PRIMARY KEY("PeriodID" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "TopAlbum" (
	"TopAlbumID"	INTEGER NOT NULL UNIQUE,
	"UserID"	INTEGER NOT NULL,
	"AlbumID"	INTEGER NOT NULL,
	"PeriodID"	INTEGER NOT NULL,
	"Playcount"	INTEGER NOT NULL,
	"LastUpdated"	TEXT NOT NULL,
	PRIMARY KEY("TopAlbumID" AUTOINCREMENT),
	FOREIGN KEY("AlbumID") REFERENCES "Album"("AlbumID"),
	FOREIGN KEY("PeriodID") REFERENCES "Period"("PeriodID"),
	FOREIGN KEY("UserID") REFERENCES "User"("UserID")
);
CREATE TABLE IF NOT EXISTS "TopArtist" (
	"TopArtistID"	INTEGER NOT NULL UNIQUE,
	"UserID"	INTEGER NOT NULL,
	"ArtistID"	INTEGER NOT NULL,
	"PeriodID"	INTEGER NOT NULL,
	"Playcount"	INTEGER NOT NULL,
	"LastUpdated"	TEXT NOT NULL,
	PRIMARY KEY("TopArtistID" AUTOINCREMENT),
	FOREIGN KEY("ArtistID") REFERENCES "Artist"("ArtistID"),
	FOREIGN KEY("PeriodID") REFERENCES "Period"("PeriodID"),
	FOREIGN KEY("UserID") REFERENCES "User"("UserID")
);
CREATE TABLE IF NOT EXISTS "TopTrack" (
	"TopTrackID"	INTEGER NOT NULL UNIQUE,
	"UserID"	INTEGER NOT NULL,
	"TrackID"	INTEGER NOT NULL,
	"PeriodID"	INTEGER NOT NULL,
	"Playcount"	INTEGER NOT NULL,
	"LastUpdated"	TEXT NOT NULL,
	PRIMARY KEY("TopTrackID" AUTOINCREMENT),
	FOREIGN KEY("PeriodID") REFERENCES "Period"("PeriodID"),
	FOREIGN KEY("TrackID") REFERENCES "Track"("TrackID"),
	FOREIGN KEY("UserID") REFERENCES "User"("UserID")
);
CREATE TABLE IF NOT EXISTS "Track" (
	"TrackID"	INTEGER NOT NULL UNIQUE,
	"TrackName"	TEXT NOT NULL,
	"ArtistID"	INTEGER,
	"MBID"	TEXT,
	PRIMARY KEY("TrackID" AUTOINCREMENT),
	FOREIGN KEY("ArtistID") REFERENCES "Artist"
);
CREATE TABLE IF NOT EXISTS "User" (
	"UserID"	INTEGER NOT NULL UNIQUE,
	"LastFmProfileName"	TEXT NOT NULL UNIQUE,
	"FirstName"	TEXT,
	"LastName"	TEXT,
	"EmailAddress"	TEXT UNIQUE,
	"LastFmProfileUrl"	TEXT,
	"Password"	TEXT,
	"Salt"	TEXT,
	"BootstrappedUser"	INTEGER NOT NULL DEFAULT 0,
	"Admin"	INTEGER NOT NULL DEFAULT 0,
	"LastLogin"	TEXT,
	"PfpSmall"	TEXT,
	"PfpMedium"	TEXT,
	"PfpLarge"	TEXT,
	"PfpExtraLarge"	TEXT,
	PRIMARY KEY("UserID" AUTOINCREMENT)
);
COMMIT;
